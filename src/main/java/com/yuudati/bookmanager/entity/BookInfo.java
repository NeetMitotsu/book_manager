package com.yuudati.bookmanager.entity;

import com.yuudati.bookmanager.util.MD5CaculateUtil;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import lombok.NonNull;

import java.io.File;
import java.util.List;
import java.util.stream.Collectors;

public class BookInfo {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.id
     *
     * @mbg.generated
     */
    private StringProperty id;


    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.exhibition
     *
     * @mbg.generated
     */
    private StringProperty exhibition;
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.artist
     *
     * @mbg.generated
     */
    private StringProperty artist;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.name
     *
     * @mbg.generated
     */
    private StringProperty name;
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.parody
     *
     * @mbg.generated
     */
    private StringProperty parody;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.translate
     *
     * @mbg.generated
     */
    private StringProperty translate;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column book_info.path
     *
     * @mbg.generated
     */
    private StringProperty path;

    private List<BookCharacters> characterList;
    private List<BookAttributes> attributeList;

    private StringProperty characters;
    private StringProperty attributes;

    public BookInfo(Book book) {
        this.id = new SimpleStringProperty(MD5CaculateUtil.getMD5(book.getNewFile()));
        this.exhibition = new SimpleStringProperty(book.getExhibition());
        this.artist = new SimpleStringProperty(book.getArtist());
        this.name = new SimpleStringProperty(book.getNewName());
        this.parody = new SimpleStringProperty(book.getParody());
        this.translate = new SimpleStringProperty(book.getTranslate());
        this.path = new SimpleStringProperty(book.getNewFile().getPath());
    }

    public BookInfo(File file, String exhibition, String artist, String name, String parody, String translate, String path) {
        this.id = new SimpleStringProperty(MD5CaculateUtil.getMD5(file));
        this.exhibition = new SimpleStringProperty(exhibition);
        this.artist = new SimpleStringProperty(artist);
        this.name = new SimpleStringProperty(name);
        this.parody = new SimpleStringProperty(parody);
        this.translate = new SimpleStringProperty(translate);
        this.path = new SimpleStringProperty(path);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book_info
     *
     * @mbg.generated
     */
    public BookInfo(String id, String exhibition, String artist, String name, String parody, String translate, String path) {
        this.id = new SimpleStringProperty(id);
        this.exhibition = new SimpleStringProperty(exhibition);
        this.artist = new SimpleStringProperty(artist);
        this.name = new SimpleStringProperty(name);
        this.parody = new SimpleStringProperty(parody);
        this.translate = new SimpleStringProperty(translate);
        this.path = new SimpleStringProperty(path);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book_info
     *
     * @mbg.generated
     */
    public BookInfo() {
        super();
    }

    public String getId() {
        return id.get();
    }

    public StringProperty idProperty() {
        return id;
    }

    public void setId(String id) {
        this.id.set(id == null ? null : id.trim());
    }

    public String getExhibition() {
        return exhibition.get();
    }

    public StringProperty exhibitionProperty() {
        return exhibition;
    }

    public void setExhibition(String exhibition) {
        this.exhibition.set(exhibition == null ? null : exhibition.trim());
    }

    public String getArtist() {
        return artist.get();
    }

    public StringProperty artistProperty() {
        return artist;
    }

    public void setArtist(String artist) {
        this.artist.set(artist == null ? null : artist.trim());
    }

    public String getName() {
        return name.get();
    }

    public StringProperty nameProperty() {
        return name;
    }

    public void setName(String name) {
        this.name.set(name == null ? null : name.trim());
    }

    public String getParody() {
        return parody.get();
    }

    public StringProperty parodyProperty() {
        return parody;
    }

    public void setParody(String parody) {
        this.parody.set(parody == null ? null : parody.trim());
    }

    public String getTranslate() {
        return translate.get();
    }

    public StringProperty translateProperty() {
        return translate;
    }

    public void setTranslate(String translate) {
        this.translate.set(translate == null ? null : translate.trim());
    }

    public String getPath() {
        return path.get();
    }

    public StringProperty pathProperty() {
        return path;
    }

    public void setPath(String path) {
        this.path.set(path);
    }

    public List<BookCharacters> getCharacterList() {
        return characterList;
    }

    public void setCharacterList(@NonNull List<BookCharacters> characterList) {
        this.characterList = characterList;
        if (characterList.size() > 0) {
            final List<String> collect = characterList.stream().map(BookCharacters::getCharacter).collect(Collectors.toList());
            this.characters = new SimpleStringProperty(String.join(",", collect));
        }
    }

    public List<BookAttributes> getAttributeList() {
        return attributeList;
    }

    public void setAttributeList(@NonNull List<BookAttributes> attributeList) {
        this.attributeList = attributeList;
        if (attributeList.size() > 0) {
            final List<String> collect = attributeList.stream().map(BookAttributes::getAttribute).collect(Collectors.toList());
            this.attributes = new SimpleStringProperty(String.join(",", collect));
        }
    }

    public String getCharacters() {
        return characters.get();
    }

    public StringProperty charactersProperty() {
        return characters;
    }

    public void setCharacters(String characters) {
        this.characters.set(characters == null ? null : characters.trim());
    }

    public String getAttributes() {
        return attributes.get();
    }

    public StringProperty attributesProperty() {
        return attributes;
    }

    public void setAttributes(String attributes) {
        this.attributes.set(attributes == null ? null : attributes.trim());
    }
}